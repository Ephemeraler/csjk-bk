// Code generated by go-swagger; DO NOT EDIT.

package alerts

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"csjk-bk/models"
)

// GetFiringAlertsClassificationOKCode is the HTTP code returned for type GetFiringAlertsClassificationOK
const GetFiringAlertsClassificationOKCode int = 200

/*
GetFiringAlertsClassificationOK 成功响应

swagger:response getFiringAlertsClassificationOK
*/
type GetFiringAlertsClassificationOK struct {

	/*
	  In: Body
	*/
	Payload *GetFiringAlertsClassificationOKBody `json:"body,omitempty"`
}

// NewGetFiringAlertsClassificationOK creates GetFiringAlertsClassificationOK with default headers values
func NewGetFiringAlertsClassificationOK() *GetFiringAlertsClassificationOK {

	return &GetFiringAlertsClassificationOK{}
}

// WithPayload adds the payload to the get firing alerts classification o k response
func (o *GetFiringAlertsClassificationOK) WithPayload(payload *GetFiringAlertsClassificationOKBody) *GetFiringAlertsClassificationOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get firing alerts classification o k response
func (o *GetFiringAlertsClassificationOK) SetPayload(payload *GetFiringAlertsClassificationOKBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetFiringAlertsClassificationOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetFiringAlertsClassificationBadRequestCode is the HTTP code returned for type GetFiringAlertsClassificationBadRequest
const GetFiringAlertsClassificationBadRequestCode int = 400

/*
GetFiringAlertsClassificationBadRequest 请求参数错误

swagger:response getFiringAlertsClassificationBadRequest
*/
type GetFiringAlertsClassificationBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.StandardResponse `json:"body,omitempty"`
}

// NewGetFiringAlertsClassificationBadRequest creates GetFiringAlertsClassificationBadRequest with default headers values
func NewGetFiringAlertsClassificationBadRequest() *GetFiringAlertsClassificationBadRequest {

	return &GetFiringAlertsClassificationBadRequest{}
}

// WithPayload adds the payload to the get firing alerts classification bad request response
func (o *GetFiringAlertsClassificationBadRequest) WithPayload(payload *models.StandardResponse) *GetFiringAlertsClassificationBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get firing alerts classification bad request response
func (o *GetFiringAlertsClassificationBadRequest) SetPayload(payload *models.StandardResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetFiringAlertsClassificationBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetFiringAlertsClassificationInternalServerErrorCode is the HTTP code returned for type GetFiringAlertsClassificationInternalServerError
const GetFiringAlertsClassificationInternalServerErrorCode int = 500

/*
GetFiringAlertsClassificationInternalServerError 内部服务错误

swagger:response getFiringAlertsClassificationInternalServerError
*/
type GetFiringAlertsClassificationInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.StandardResponse `json:"body,omitempty"`
}

// NewGetFiringAlertsClassificationInternalServerError creates GetFiringAlertsClassificationInternalServerError with default headers values
func NewGetFiringAlertsClassificationInternalServerError() *GetFiringAlertsClassificationInternalServerError {

	return &GetFiringAlertsClassificationInternalServerError{}
}

// WithPayload adds the payload to the get firing alerts classification internal server error response
func (o *GetFiringAlertsClassificationInternalServerError) WithPayload(payload *models.StandardResponse) *GetFiringAlertsClassificationInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get firing alerts classification internal server error response
func (o *GetFiringAlertsClassificationInternalServerError) SetPayload(payload *models.StandardResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetFiringAlertsClassificationInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
